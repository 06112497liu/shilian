<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bbd.dao.CompanyMoveDao">
  <resultMap id="BaseResultMap" type="com.bbd.domain.CompanyMoveInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="nbxh" jdbcType="VARCHAR" property="nbxh" />
    <result column="register_number" jdbcType="VARCHAR" property="registerNumber" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="company_type" jdbcType="VARCHAR" property="companyType" />
    <result column="register_authority" jdbcType="VARCHAR" property="registerAuthority" />
    <result column="move_out_time" jdbcType="DATE" property="moveOutTime" />
    <result column="move_out_register_authority" jdbcType="VARCHAR" property="moveOutRegisterAuthority" />
    <result column="move_out_nature" jdbcType="VARCHAR" property="moveOutNature" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, nbxh, register_number, company_name, company_type, register_authority, move_out_time, 
    move_out_register_authority, move_out_nature, create_time
  </sql>
  <select id="selectByExample" parameterType="com.bbd.domain.CompanyMoveInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bbd_company_move
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bbd_company_move
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bbd_company_move
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bbd.domain.CompanyMoveInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bbd_company_move (nbxh, register_number, company_name, 
      company_type, register_authority, move_out_time, 
      move_out_register_authority, move_out_nature, 
      create_time)
    values (#{nbxh,jdbcType=VARCHAR}, #{registerNumber,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR}, 
      #{companyType,jdbcType=VARCHAR}, #{registerAuthority,jdbcType=VARCHAR}, #{moveOutTime,jdbcType=DATE}, 
      #{moveOutRegisterAuthority,jdbcType=VARCHAR}, #{moveOutNature,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bbd.domain.CompanyMoveInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bbd_company_move
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nbxh != null">
        nbxh,
      </if>
      <if test="registerNumber != null">
        register_number,
      </if>
      <if test="companyName != null">
        company_name,
      </if>
      <if test="companyType != null">
        company_type,
      </if>
      <if test="registerAuthority != null">
        register_authority,
      </if>
      <if test="moveOutTime != null">
        move_out_time,
      </if>
      <if test="moveOutRegisterAuthority != null">
        move_out_register_authority,
      </if>
      <if test="moveOutNature != null">
        move_out_nature,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nbxh != null">
        #{nbxh,jdbcType=VARCHAR},
      </if>
      <if test="registerNumber != null">
        #{registerNumber,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyType != null">
        #{companyType,jdbcType=VARCHAR},
      </if>
      <if test="registerAuthority != null">
        #{registerAuthority,jdbcType=VARCHAR},
      </if>
      <if test="moveOutTime != null">
        #{moveOutTime,jdbcType=DATE},
      </if>
      <if test="moveOutRegisterAuthority != null">
        #{moveOutRegisterAuthority,jdbcType=VARCHAR},
      </if>
      <if test="moveOutNature != null">
        #{moveOutNature,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update bbd_company_move
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.nbxh != null">
        nbxh = #{record.nbxh,jdbcType=VARCHAR},
      </if>
      <if test="record.registerNumber != null">
        register_number = #{record.registerNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.companyName != null">
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.companyType != null">
        company_type = #{record.companyType,jdbcType=VARCHAR},
      </if>
      <if test="record.registerAuthority != null">
        register_authority = #{record.registerAuthority,jdbcType=VARCHAR},
      </if>
      <if test="record.moveOutTime != null">
        move_out_time = #{record.moveOutTime,jdbcType=DATE},
      </if>
      <if test="record.moveOutRegisterAuthority != null">
        move_out_register_authority = #{record.moveOutRegisterAuthority,jdbcType=VARCHAR},
      </if>
      <if test="record.moveOutNature != null">
        move_out_nature = #{record.moveOutNature,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bbd_company_move
    set id = #{record.id,jdbcType=INTEGER},
      nbxh = #{record.nbxh,jdbcType=VARCHAR},
      register_number = #{record.registerNumber,jdbcType=VARCHAR},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      company_type = #{record.companyType,jdbcType=VARCHAR},
      register_authority = #{record.registerAuthority,jdbcType=VARCHAR},
      move_out_time = #{record.moveOutTime,jdbcType=DATE},
      move_out_register_authority = #{record.moveOutRegisterAuthority,jdbcType=VARCHAR},
      move_out_nature = #{record.moveOutNature,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bbd.domain.CompanyMoveInfo">
    update bbd_company_move
    <set>
      <if test="nbxh != null">
        nbxh = #{nbxh,jdbcType=VARCHAR},
      </if>
      <if test="registerNumber != null">
        register_number = #{registerNumber,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyType != null">
        company_type = #{companyType,jdbcType=VARCHAR},
      </if>
      <if test="registerAuthority != null">
        register_authority = #{registerAuthority,jdbcType=VARCHAR},
      </if>
      <if test="moveOutTime != null">
        move_out_time = #{moveOutTime,jdbcType=DATE},
      </if>
      <if test="moveOutRegisterAuthority != null">
        move_out_register_authority = #{moveOutRegisterAuthority,jdbcType=VARCHAR},
      </if>
      <if test="moveOutNature != null">
        move_out_nature = #{moveOutNature,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bbd.domain.CompanyMoveInfo">
    update bbd_company_move
    set nbxh = #{nbxh,jdbcType=VARCHAR},
      register_number = #{registerNumber,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      company_type = #{companyType,jdbcType=VARCHAR},
      register_authority = #{registerAuthority,jdbcType=VARCHAR},
      move_out_time = #{moveOutTime,jdbcType=DATE},
      move_out_register_authority = #{moveOutRegisterAuthority,jdbcType=VARCHAR},
      move_out_nature = #{moveOutNature,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithPageBounds" parameterType="com.bbd.domain.CompanyMoveInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bbd_company_move
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>