<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bbd.dao.CompanyAdInfoDao">
  <resultMap id="BaseResultMap" type="com.bbd.domain.CompanyAdInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="nbxh" jdbcType="VARCHAR" property="nbxh" />
    <result column="register_no" jdbcType="VARCHAR" property="registerNo" />
    <result column="available_from" jdbcType="TIMESTAMP" property="availableFrom" />
    <result column="available_to" jdbcType="TIMESTAMP" property="availableTo" />
    <result column="auth" jdbcType="VARCHAR" property="auth" />
    <result column="auth_time" jdbcType="TIMESTAMP" property="authTime" />
    <result column="type" jdbcType="BIT" property="type" />
    <result column="remote_id" jdbcType="VARCHAR" property="remoteId" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_update" jdbcType="TIMESTAMP" property="gmtUpdate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, nbxh, register_no, available_from, available_to, auth, auth_time, type, remote_id, 
    gmt_create, gmt_update
  </sql>
  <select id="selectByExample" parameterType="com.bbd.domain.CompanyAdInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bbd_company_ad
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bbd_company_ad
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bbd_company_ad
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bbd.domain.CompanyAdInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bbd_company_ad (nbxh, register_no, available_from, 
      available_to, auth, auth_time, 
      type, remote_id, gmt_create, 
      gmt_update)
    values (#{nbxh,jdbcType=VARCHAR}, #{registerNo,jdbcType=VARCHAR}, #{availableFrom,jdbcType=TIMESTAMP}, 
      #{availableTo,jdbcType=TIMESTAMP}, #{auth,jdbcType=VARCHAR}, #{authTime,jdbcType=TIMESTAMP}, 
      #{type,jdbcType=BIT}, #{remoteId,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtUpdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bbd.domain.CompanyAdInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bbd_company_ad
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nbxh != null">
        nbxh,
      </if>
      <if test="registerNo != null">
        register_no,
      </if>
      <if test="availableFrom != null">
        available_from,
      </if>
      <if test="availableTo != null">
        available_to,
      </if>
      <if test="auth != null">
        auth,
      </if>
      <if test="authTime != null">
        auth_time,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="remoteId != null">
        remote_id,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtUpdate != null">
        gmt_update,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nbxh != null">
        #{nbxh,jdbcType=VARCHAR},
      </if>
      <if test="registerNo != null">
        #{registerNo,jdbcType=VARCHAR},
      </if>
      <if test="availableFrom != null">
        #{availableFrom,jdbcType=TIMESTAMP},
      </if>
      <if test="availableTo != null">
        #{availableTo,jdbcType=TIMESTAMP},
      </if>
      <if test="auth != null">
        #{auth,jdbcType=VARCHAR},
      </if>
      <if test="authTime != null">
        #{authTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=BIT},
      </if>
      <if test="remoteId != null">
        #{remoteId,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null">
        #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update bbd_company_ad
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.nbxh != null">
        nbxh = #{record.nbxh,jdbcType=VARCHAR},
      </if>
      <if test="record.registerNo != null">
        register_no = #{record.registerNo,jdbcType=VARCHAR},
      </if>
      <if test="record.availableFrom != null">
        available_from = #{record.availableFrom,jdbcType=TIMESTAMP},
      </if>
      <if test="record.availableTo != null">
        available_to = #{record.availableTo,jdbcType=TIMESTAMP},
      </if>
      <if test="record.auth != null">
        auth = #{record.auth,jdbcType=VARCHAR},
      </if>
      <if test="record.authTime != null">
        auth_time = #{record.authTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=BIT},
      </if>
      <if test="record.remoteId != null">
        remote_id = #{record.remoteId,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtUpdate != null">
        gmt_update = #{record.gmtUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bbd_company_ad
    set id = #{record.id,jdbcType=INTEGER},
      nbxh = #{record.nbxh,jdbcType=VARCHAR},
      register_no = #{record.registerNo,jdbcType=VARCHAR},
      available_from = #{record.availableFrom,jdbcType=TIMESTAMP},
      available_to = #{record.availableTo,jdbcType=TIMESTAMP},
      auth = #{record.auth,jdbcType=VARCHAR},
      auth_time = #{record.authTime,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=BIT},
      remote_id = #{record.remoteId,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_update = #{record.gmtUpdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bbd.domain.CompanyAdInfo">
    update bbd_company_ad
    <set>
      <if test="nbxh != null">
        nbxh = #{nbxh,jdbcType=VARCHAR},
      </if>
      <if test="registerNo != null">
        register_no = #{registerNo,jdbcType=VARCHAR},
      </if>
      <if test="availableFrom != null">
        available_from = #{availableFrom,jdbcType=TIMESTAMP},
      </if>
      <if test="availableTo != null">
        available_to = #{availableTo,jdbcType=TIMESTAMP},
      </if>
      <if test="auth != null">
        auth = #{auth,jdbcType=VARCHAR},
      </if>
      <if test="authTime != null">
        auth_time = #{authTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=BIT},
      </if>
      <if test="remoteId != null">
        remote_id = #{remoteId,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null">
        gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bbd.domain.CompanyAdInfo">
    update bbd_company_ad
    set nbxh = #{nbxh,jdbcType=VARCHAR},
      register_no = #{registerNo,jdbcType=VARCHAR},
      available_from = #{availableFrom,jdbcType=TIMESTAMP},
      available_to = #{availableTo,jdbcType=TIMESTAMP},
      auth = #{auth,jdbcType=VARCHAR},
      auth_time = #{authTime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=BIT},
      remote_id = #{remoteId,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithPageBounds" parameterType="com.bbd.domain.CompanyAdInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bbd_company_ad
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>