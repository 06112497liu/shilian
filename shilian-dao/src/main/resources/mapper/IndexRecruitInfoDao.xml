<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bbd.dao.IndexRecruitInfoDao">
  <resultMap id="BaseResultMap" type="com.bbd.domain.IndexRecruitInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="company_id" jdbcType="VARCHAR" property="companyId" />
    <result column="index_type_id" jdbcType="INTEGER" property="indexTypeId" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="recruit_date" jdbcType="TIMESTAMP" property="recruitDate" />
    <result column="recruit_num" jdbcType="VARCHAR" property="recruitNum" />
    <result column="graduate" jdbcType="VARCHAR" property="graduate" />
    <result column="recruit_place" jdbcType="VARCHAR" property="recruitPlace" />
    <result column="data_soruce" jdbcType="VARCHAR" property="dataSoruce" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="e_mail" jdbcType="VARCHAR" property="eMail" />
    <result column="contact_information" jdbcType="VARCHAR" property="contactInformation" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.bbd.domain.IndexRecruitInfo">
    <result column="recruit_post" jdbcType="LONGVARCHAR" property="recruitPost" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, company_id, index_type_id, company_name, recruit_date, recruit_num, graduate, 
    recruit_place, data_soruce, gmt_create, e_mail, contact_information
  </sql>
  <sql id="Blob_Column_List">
    recruit_post
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.bbd.domain.IndexRecruitInfoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bbd_index_recruit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.bbd.domain.IndexRecruitInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bbd_index_recruit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bbd_index_recruit
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bbd_index_recruit
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bbd.domain.IndexRecruitInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bbd_index_recruit (company_id, index_type_id, company_name, 
      recruit_date, recruit_num, graduate, 
      recruit_place, data_soruce, gmt_create, 
      e_mail, contact_information, recruit_post
      )
    values (#{companyId,jdbcType=VARCHAR}, #{indexTypeId,jdbcType=INTEGER}, #{companyName,jdbcType=VARCHAR}, 
      #{recruitDate,jdbcType=TIMESTAMP}, #{recruitNum,jdbcType=VARCHAR}, #{graduate,jdbcType=VARCHAR}, 
      #{recruitPlace,jdbcType=VARCHAR}, #{dataSoruce,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{eMail,jdbcType=VARCHAR}, #{contactInformation,jdbcType=VARCHAR}, #{recruitPost,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bbd.domain.IndexRecruitInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bbd_index_recruit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="indexTypeId != null">
        index_type_id,
      </if>
      <if test="companyName != null">
        company_name,
      </if>
      <if test="recruitDate != null">
        recruit_date,
      </if>
      <if test="recruitNum != null">
        recruit_num,
      </if>
      <if test="graduate != null">
        graduate,
      </if>
      <if test="recruitPlace != null">
        recruit_place,
      </if>
      <if test="dataSoruce != null">
        data_soruce,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="eMail != null">
        e_mail,
      </if>
      <if test="contactInformation != null">
        contact_information,
      </if>
      <if test="recruitPost != null">
        recruit_post,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="indexTypeId != null">
        #{indexTypeId,jdbcType=INTEGER},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="recruitDate != null">
        #{recruitDate,jdbcType=TIMESTAMP},
      </if>
      <if test="recruitNum != null">
        #{recruitNum,jdbcType=VARCHAR},
      </if>
      <if test="graduate != null">
        #{graduate,jdbcType=VARCHAR},
      </if>
      <if test="recruitPlace != null">
        #{recruitPlace,jdbcType=VARCHAR},
      </if>
      <if test="dataSoruce != null">
        #{dataSoruce,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="eMail != null">
        #{eMail,jdbcType=VARCHAR},
      </if>
      <if test="contactInformation != null">
        #{contactInformation,jdbcType=VARCHAR},
      </if>
      <if test="recruitPost != null">
        #{recruitPost,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update bbd_index_recruit
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=VARCHAR},
      </if>
      <if test="record.indexTypeId != null">
        index_type_id = #{record.indexTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.companyName != null">
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.recruitDate != null">
        recruit_date = #{record.recruitDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.recruitNum != null">
        recruit_num = #{record.recruitNum,jdbcType=VARCHAR},
      </if>
      <if test="record.graduate != null">
        graduate = #{record.graduate,jdbcType=VARCHAR},
      </if>
      <if test="record.recruitPlace != null">
        recruit_place = #{record.recruitPlace,jdbcType=VARCHAR},
      </if>
      <if test="record.dataSoruce != null">
        data_soruce = #{record.dataSoruce,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.eMail != null">
        e_mail = #{record.eMail,jdbcType=VARCHAR},
      </if>
      <if test="record.contactInformation != null">
        contact_information = #{record.contactInformation,jdbcType=VARCHAR},
      </if>
      <if test="record.recruitPost != null">
        recruit_post = #{record.recruitPost,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update bbd_index_recruit
    set id = #{record.id,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=VARCHAR},
      index_type_id = #{record.indexTypeId,jdbcType=INTEGER},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      recruit_date = #{record.recruitDate,jdbcType=TIMESTAMP},
      recruit_num = #{record.recruitNum,jdbcType=VARCHAR},
      graduate = #{record.graduate,jdbcType=VARCHAR},
      recruit_place = #{record.recruitPlace,jdbcType=VARCHAR},
      data_soruce = #{record.dataSoruce,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      e_mail = #{record.eMail,jdbcType=VARCHAR},
      contact_information = #{record.contactInformation,jdbcType=VARCHAR},
      recruit_post = #{record.recruitPost,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bbd_index_recruit
    set id = #{record.id,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=VARCHAR},
      index_type_id = #{record.indexTypeId,jdbcType=INTEGER},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      recruit_date = #{record.recruitDate,jdbcType=TIMESTAMP},
      recruit_num = #{record.recruitNum,jdbcType=VARCHAR},
      graduate = #{record.graduate,jdbcType=VARCHAR},
      recruit_place = #{record.recruitPlace,jdbcType=VARCHAR},
      data_soruce = #{record.dataSoruce,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      e_mail = #{record.eMail,jdbcType=VARCHAR},
      contact_information = #{record.contactInformation,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bbd.domain.IndexRecruitInfo">
    update bbd_index_recruit
    <set>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="indexTypeId != null">
        index_type_id = #{indexTypeId,jdbcType=INTEGER},
      </if>
      <if test="companyName != null">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="recruitDate != null">
        recruit_date = #{recruitDate,jdbcType=TIMESTAMP},
      </if>
      <if test="recruitNum != null">
        recruit_num = #{recruitNum,jdbcType=VARCHAR},
      </if>
      <if test="graduate != null">
        graduate = #{graduate,jdbcType=VARCHAR},
      </if>
      <if test="recruitPlace != null">
        recruit_place = #{recruitPlace,jdbcType=VARCHAR},
      </if>
      <if test="dataSoruce != null">
        data_soruce = #{dataSoruce,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="eMail != null">
        e_mail = #{eMail,jdbcType=VARCHAR},
      </if>
      <if test="contactInformation != null">
        contact_information = #{contactInformation,jdbcType=VARCHAR},
      </if>
      <if test="recruitPost != null">
        recruit_post = #{recruitPost,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bbd.domain.IndexRecruitInfo">
    update bbd_index_recruit
    set company_id = #{companyId,jdbcType=VARCHAR},
      index_type_id = #{indexTypeId,jdbcType=INTEGER},
      company_name = #{companyName,jdbcType=VARCHAR},
      recruit_date = #{recruitDate,jdbcType=TIMESTAMP},
      recruit_num = #{recruitNum,jdbcType=VARCHAR},
      graduate = #{graduate,jdbcType=VARCHAR},
      recruit_place = #{recruitPlace,jdbcType=VARCHAR},
      data_soruce = #{dataSoruce,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      e_mail = #{eMail,jdbcType=VARCHAR},
      contact_information = #{contactInformation,jdbcType=VARCHAR},
      recruit_post = #{recruitPost,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bbd.domain.IndexRecruitInfo">
    update bbd_index_recruit
    set company_id = #{companyId,jdbcType=VARCHAR},
      index_type_id = #{indexTypeId,jdbcType=INTEGER},
      company_name = #{companyName,jdbcType=VARCHAR},
      recruit_date = #{recruitDate,jdbcType=TIMESTAMP},
      recruit_num = #{recruitNum,jdbcType=VARCHAR},
      graduate = #{graduate,jdbcType=VARCHAR},
      recruit_place = #{recruitPlace,jdbcType=VARCHAR},
      data_soruce = #{dataSoruce,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      e_mail = #{eMail,jdbcType=VARCHAR},
      contact_information = #{contactInformation,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithPageBounds" parameterType="com.bbd.domain.IndexRecruitInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bbd_index_recruit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>