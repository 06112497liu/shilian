<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bbd.dao.CompanyLicenceInfoDao">
  <resultMap id="BaseResultMap" type="com.bbd.domain.CompanyLicenceInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="nbxh" jdbcType="VARCHAR" property="nbxh" />
    <result column="licence_no" jdbcType="VARCHAR" property="licenceNo" />
    <result column="licence_name" jdbcType="VARCHAR" property="licenceName" />
    <result column="a_from" jdbcType="TIMESTAMP" property="aFrom" />
    <result column="a_to" jdbcType="TIMESTAMP" property="aTo" />
    <result column="auth" jdbcType="VARCHAR" property="auth" />
    <result column="TYPE" jdbcType="VARCHAR" property="type" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, nbxh, licence_no, licence_name, a_from, a_to, auth, TYPE, create_time, update_time, 
    gmt_create, gmt_modified
  </sql>
  <select id="selectByExample" parameterType="com.bbd.domain.CompanyLicenceInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bbd_company_licence
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bbd_company_licence
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bbd_company_licence
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bbd.domain.CompanyLicenceInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bbd_company_licence (nbxh, licence_no, licence_name, 
      a_from, a_to, auth, 
      TYPE, create_time, update_time, 
      gmt_create, gmt_modified)
    values (#{nbxh,jdbcType=VARCHAR}, #{licenceNo,jdbcType=VARCHAR}, #{licenceName,jdbcType=VARCHAR}, 
      #{aFrom,jdbcType=TIMESTAMP}, #{aTo,jdbcType=TIMESTAMP}, #{auth,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bbd.domain.CompanyLicenceInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bbd_company_licence
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nbxh != null">
        nbxh,
      </if>
      <if test="licenceNo != null">
        licence_no,
      </if>
      <if test="licenceName != null">
        licence_name,
      </if>
      <if test="aFrom != null">
        a_from,
      </if>
      <if test="aTo != null">
        a_to,
      </if>
      <if test="auth != null">
        auth,
      </if>
      <if test="type != null">
        TYPE,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nbxh != null">
        #{nbxh,jdbcType=VARCHAR},
      </if>
      <if test="licenceNo != null">
        #{licenceNo,jdbcType=VARCHAR},
      </if>
      <if test="licenceName != null">
        #{licenceName,jdbcType=VARCHAR},
      </if>
      <if test="aFrom != null">
        #{aFrom,jdbcType=TIMESTAMP},
      </if>
      <if test="aTo != null">
        #{aTo,jdbcType=TIMESTAMP},
      </if>
      <if test="auth != null">
        #{auth,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update bbd_company_licence
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.nbxh != null">
        nbxh = #{record.nbxh,jdbcType=VARCHAR},
      </if>
      <if test="record.licenceNo != null">
        licence_no = #{record.licenceNo,jdbcType=VARCHAR},
      </if>
      <if test="record.licenceName != null">
        licence_name = #{record.licenceName,jdbcType=VARCHAR},
      </if>
      <if test="record.aFrom != null">
        a_from = #{record.aFrom,jdbcType=TIMESTAMP},
      </if>
      <if test="record.aTo != null">
        a_to = #{record.aTo,jdbcType=TIMESTAMP},
      </if>
      <if test="record.auth != null">
        auth = #{record.auth,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        TYPE = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bbd_company_licence
    set id = #{record.id,jdbcType=INTEGER},
      nbxh = #{record.nbxh,jdbcType=VARCHAR},
      licence_no = #{record.licenceNo,jdbcType=VARCHAR},
      licence_name = #{record.licenceName,jdbcType=VARCHAR},
      a_from = #{record.aFrom,jdbcType=TIMESTAMP},
      a_to = #{record.aTo,jdbcType=TIMESTAMP},
      auth = #{record.auth,jdbcType=VARCHAR},
      TYPE = #{record.type,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bbd.domain.CompanyLicenceInfo">
    update bbd_company_licence
    <set>
      <if test="nbxh != null">
        nbxh = #{nbxh,jdbcType=VARCHAR},
      </if>
      <if test="licenceNo != null">
        licence_no = #{licenceNo,jdbcType=VARCHAR},
      </if>
      <if test="licenceName != null">
        licence_name = #{licenceName,jdbcType=VARCHAR},
      </if>
      <if test="aFrom != null">
        a_from = #{aFrom,jdbcType=TIMESTAMP},
      </if>
      <if test="aTo != null">
        a_to = #{aTo,jdbcType=TIMESTAMP},
      </if>
      <if test="auth != null">
        auth = #{auth,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        TYPE = #{type,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bbd.domain.CompanyLicenceInfo">
    update bbd_company_licence
    set nbxh = #{nbxh,jdbcType=VARCHAR},
      licence_no = #{licenceNo,jdbcType=VARCHAR},
      licence_name = #{licenceName,jdbcType=VARCHAR},
      a_from = #{aFrom,jdbcType=TIMESTAMP},
      a_to = #{aTo,jdbcType=TIMESTAMP},
      auth = #{auth,jdbcType=VARCHAR},
      TYPE = #{type,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithPageBounds" parameterType="com.bbd.domain.CompanyLicenceInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bbd_company_licence
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>